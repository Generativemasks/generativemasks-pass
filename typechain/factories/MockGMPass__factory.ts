/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockGMPass, MockGMPassInterface } from "../MockGMPass";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IN",
        name: "gm",
        type: "address",
      },
      {
        internalType: "bool",
        name: "onlyNHolders",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "maxTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "reservedAllowance",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "priceForNHoldersInWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceForOpenMintInWei",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "GM_SUPPLY_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_GM_TOKEN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_MULTI_MINT_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "METADATA_INDEX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maskNumber",
        type: "uint256",
      },
    ],
    name: "getTokenIdFromMaskNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "maskNumbers",
        type: "uint256[]",
      },
    ],
    name: "getTokenIdListFromMaskNumbers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "gm",
    outputs: [
      {
        internalType: "contract IN",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maskNumber",
        type: "uint256",
      },
    ],
    name: "mintWithGMMaskNumber",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mintWithGMTokenId",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "maskNumbers",
        type: "uint256[]",
      },
    ],
    name: "multiMintWithGMMaskNumbers",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "multiMintWithGMTokenIds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "nHoldersMintsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "onlyGMHolders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openMintsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceForNHoldersInWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceForOpenMintInWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveMinted",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservedAllowance",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162003608380380620036088339810160408190526200003591620003b6565b8787878787878787878781600090805190602001906200005792919062000230565b5080516200006d90600190602084019062000230565b50506001600a55506200008033620001de565b60008411620000d65760405162461bcd60e51b815260206004820152601560248201527f474d506173733a494e56414c49445f535550504c59000000000000000000000060448201526064015b60405180910390fd5b841580620000ef5750848015620000ef575061270f8411155b6200013d5760405162461bcd60e51b815260206004820152601560248201527f474d506173733a494e56414c49445f535550504c5900000000000000000000006044820152606401620000cd565b8261ffff16841015620001935760405162461bcd60e51b815260206004820152601860248201527f474d506173733a494e56414c49445f414c4c4f57414e434500000000000000006044820152606401620000cd565b60609590951b6001600160601b03191660805292151560f81b60a05260e09190915260f01b6001600160f01b03191660c052610100526101205250620004d698505050505050505050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200023e9062000483565b90600052602060002090601f016020900481019282620002625760008555620002ad565b82601f106200027d57805160ff1916838001178555620002ad565b82800160010185558215620002ad579182015b82811115620002ad57825182559160200191906001019062000290565b50620002bb929150620002bf565b5090565b5b80821115620002bb5760008155600101620002c0565b80518015158114620002e757600080fd5b919050565b600082601f830112620002fe57600080fd5b81516001600160401b03808211156200031b576200031b620004c0565b604051601f8301601f19908116603f01168101908282118183101715620003465762000346620004c0565b816040528381526020925086838588010111156200036357600080fd5b600091505b8382101562000387578582018301518183018401529082019062000368565b83821115620003995760008385830101525b9695505050505050565b805161ffff81168114620002e757600080fd5b600080600080600080600080610100898b031215620003d457600080fd5b88516001600160401b0380821115620003ec57600080fd5b620003fa8c838d01620002ec565b995060208b01519150808211156200041157600080fd5b50620004208b828c01620002ec565b60408b015190985090506001600160a01b03811681146200044057600080fd5b95506200045060608a01620002d6565b9450608089015193506200046760a08a01620003a3565b60c08a015160e0909a0151989b979a5095989497939692505050565b600181811c908216806200049857607f821691505b60208210811415620004ba57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160f81c60c05160f01c60e051610100516101205161304d620005bb6000396000818161080e0152611ab601526000818161075b01528181610e10015261163c01526000818161047401528181610c6e0152818161132b0152818161144d015261156e0152600081816103c301528181610c4401528181610ca601528181610e79015281816113090152818161142b01528181611544015281816115b2015281816117df0152611cfc01526000818161044001526118e20152600081816106f201528181610d3e015281816116bc01526119e3015261304d6000f3fe6080604052600436106102c65760003560e01c806370a0823111610179578063a22cb465116100d6578063c87b56dd1161008a578063ea92471f11610064578063ea92471f146107c6578063f2fde38b146107dc578063f82cbbe8146107fc57600080fd5b8063c87b56dd14610729578063daf5d37414610749578063e985e9c51461077d57600080fd5b8063b88d4fde116100bb578063b88d4fde146106c0578063c0129d43146106e0578063c5de34a01461071457600080fd5b8063a22cb46514610680578063ab2efdd9146106a057600080fd5b80638da5cb5b1161012d57806395d89b411161011257806395d89b41146106455780639665688d1461065a578063a0712d681461066d57600080fd5b80638da5cb5b1461061257806391ba317a1461063057600080fd5b806383c56f4c1161015e57806383c56f4c146105d55780638416b696146105e8578063853828b6146105fd57600080fd5b806370a08231146105a0578063715018a6146105c057600080fd5b80632ab4d052116102275780634f6ccce7116101db578063598fa02a116101c0578063598fa02a146105585780635d929f701461056b5780636352211e1461058057600080fd5b80634f6ccce71461050b578063564284b61461052b57600080fd5b806342842e0e1161020c57806342842e0e146104b65780634c81433f146104d65780634f3e23f6146104f857600080fd5b80632ab4d052146104625780632f745c591461049657600080fd5b80631caf18f81161027e578063227982291161026357806322798229146103f857806323b872dd1461040e57806325e683d11461042e57600080fd5b80631caf18f81461039b57806320bc84ce146103b157600080fd5b8063081812fc116102af578063081812fc14610322578063095ea7b31461035a57806318160ddd1461037c57600080fd5b806301ffc9a7146102cb57806306fdde0314610300575b600080fd5b3480156102d757600080fd5b506102eb6102e6366004612cdb565b610830565b60405190151581526020015b60405180910390f35b34801561030c57600080fd5b5061031561085b565b6040516102f79190612e09565b34801561032e57600080fd5b5061034261033d366004612d15565b6108ed565b6040516001600160a01b0390911681526020016102f7565b34801561036657600080fd5b5061037a610375366004612b8d565b610987565b005b34801561038857600080fd5b506008545b6040519081526020016102f7565b3480156103a757600080fd5b5061038d61270f81565b3480156103bd57600080fd5b506103e57f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff90911681526020016102f7565b34801561040457600080fd5b5061038d610ed781565b34801561041a57600080fd5b5061037a610429366004612a55565b610a9d565b34801561043a57600080fd5b506102eb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561046e57600080fd5b5061038d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104a257600080fd5b5061038d6104b1366004612b8d565b610b24565b3480156104c257600080fd5b5061037a6104d1366004612a55565b610bcc565b3480156104e257600080fd5b50600b546103e590600160a01b900461ffff1681565b61037a610506366004612d15565b610be7565b34801561051757600080fd5b5061038d610526366004612d15565b610ee7565b34801561053757600080fd5b5061054b610546366004612bb9565b610f8b565b6040516102f79190612dc5565b61037a610566366004612d15565b6110a1565b34801561057757600080fd5b5061038d602081565b34801561058c57600080fd5b5061034261059b366004612d15565b611105565b3480156105ac57600080fd5b5061038d6105bb3660046129e2565b611190565b3480156105cc57600080fd5b5061037a61122a565b61037a6105e3366004612bb9565b611290565b3480156105f457600080fd5b5061038d6112fe565b34801561060957600080fd5b5061037a61138a565b34801561061e57600080fd5b50600b546001600160a01b0316610342565b34801561063c57600080fd5b5061038d611420565b34801561065157600080fd5b50610315611485565b61037a610668366004612c2e565b611494565b61037a61067b366004612d15565b611888565b34801561068c57600080fd5b5061037a61069b366004612b5a565b611b1a565b3480156106ac57600080fd5b5061038d6106bb366004612d15565b611bdf565b3480156106cc57600080fd5b5061037a6106db366004612a96565b611c57565b3480156106ec57600080fd5b506103427f000000000000000000000000000000000000000000000000000000000000000081565b34801561072057600080fd5b5061038d611ce5565b34801561073557600080fd5b50610315610744366004612d15565b611d29565b34801561075557600080fd5b5061038d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561078957600080fd5b506102eb610798366004612a1c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156107d257600080fd5b5061038d61271081565b3480156107e857600080fd5b5061037a6107f73660046129e2565b611e1f565b34801561080857600080fd5b5061038d7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b0319821663780e9d6360e01b1480610855575061085582611efe565b92915050565b60606000805461086a90612f1b565b80601f016020809104026020016040519081016040528092919081815260200182805461089690612f1b565b80156108e35780601f106108b8576101008083540402835291602001916108e3565b820191906000526020600020905b8154815290600101906020018083116108c657829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661096b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061099282611105565b9050806001600160a01b0316836001600160a01b03161415610a005760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610962565b336001600160a01b0382161480610a1c5750610a1c8133610798565b610a8e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610962565b610a988383611f4e565b505050565b610aa73382611fbc565b610b195760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610962565b610a988383836120b3565b6000610b2f83611190565b8210610ba35760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610962565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610a9883838360405180602001604052806000815250611c57565b6002600a541415610c3a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610962565b6002600a5561ffff7f000000000000000000000000000000000000000000000000000000000000000016158015610c9857507f0000000000000000000000000000000000000000000000000000000000000000610c9660085490565b105b80610cd25750600b5461ffff7f00000000000000000000000000000000000000000000000000000000000000008116600160a01b90920416105b610d1e5760405162461bcd60e51b815260206004820152601d60248201527f474d506173733a4d41585f414c4c4f434154494f4e5f524541434845440000006044820152606401610962565b6040516331a9108f60e11b81526004810182905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e9060240160206040518083038186803b158015610d8057600080fd5b505afa158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db891906129ff565b6001600160a01b031614610e0e5760405162461bcd60e51b815260206004820152601460248201527f474d506173733a494e56414c49445f4f574e45520000000000000000000000006044820152606401610962565b7f00000000000000000000000000000000000000000000000000000000000000003414610e745760405162461bcd60e51b8152602060048201526014602482015273474d506173733a494e56414c49445f505249434560601b6044820152606401610962565b61ffff7f00000000000000000000000000000000000000000000000000000000000000001615610ed557600b8054600160a01b900461ffff16906014610eb983612f56565b91906101000a81548161ffff021916908361ffff160217905550505b610edf3382612272565b506001600a55565b6000610ef260085490565b8210610f665760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610962565b60088281548110610f7957610f79612fe9565b90600052602060002001549050919050565b606060008267ffffffffffffffff811115610fa857610fa8612fff565b604051908082528060200260200182016040528015610fd1578160200160208202803683370190505b50905060005b838110156110995761270f858583818110610ff457610ff4612fe9565b9050602002013511156110495760405162461bcd60e51b815260206004820152601360248201527f496e76616c6964206d61736b206e756d626572000000000000000000000000006044820152606401610962565b61106a85858381811061105e5761105e612fe9565b90506020020135611bdf565b82828151811061107c5761107c612fe9565b60209081029190910101528061109181612f78565b915050610fd7565b509392505050565b6002600a5414156110f45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610962565b6002600a55610edf61050682611bdf565b6000818152600260205260408120546001600160a01b0316806108555760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610962565b60006001600160a01b03821661120e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610962565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b031633146112845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610962565b61128e6000612290565b565b6002600a5414156112e35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610962565b6002600a556112f56106688383610f8b565b50506001600a55565b60008061134f61ffff7f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000612ed8565b600b5490915060009061ffff600160a01b9091041661136d60085490565b6113779190612ed8565b90506113838183612ed8565b9250505090565b600b546001600160a01b031633146113e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610962565b600b546040516001600160a01b03909116904780156108fc02916000818181858888f1935050505015801561141d573d6000803e3d6000fd5b50565b60008061147161ffff7f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000612ed8565b905061147f8161270f612e6a565b91505090565b60606001805461086a90612f1b565b6002600a5414156114e75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610962565b6002600a558051602081111561153f5760405162461bcd60e51b815260206004820152601060248201527f474d506173733a544f4f5f4c41524745000000000000000000000000000000006044820152606401610962565b61ffff7f0000000000000000000000000000000000000000000000000000000000000000161580156115a457507f00000000000000000000000000000000000000000000000000000000000000008161159760085490565b6115a19190612e6a565b11155b806115ea5750600b5461ffff7f00000000000000000000000000000000000000000000000000000000000000008116916115e7918491600160a01b900416612e6a565b11155b6116365760405162461bcd60e51b815260206004820152601d60248201527f474d506173733a4d41585f414c4c4f434154494f4e5f524541434845440000006044820152606401610962565b611660817f0000000000000000000000000000000000000000000000000000000000000000612e96565b34146116a55760405162461bcd60e51b8152602060048201526014602482015273474d506173733a494e56414c49445f505249434560601b6044820152606401610962565b60005b818110156117d957336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e8584815181106116fb576116fb612fe9565b60200260200101516040518263ffffffff1660e01b815260040161172191815260200190565b60206040518083038186803b15801561173957600080fd5b505afa15801561174d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177191906129ff565b6001600160a01b0316146117c75760405162461bcd60e51b815260206004820152601460248201527f474d506173733a494e56414c49445f4f574e45520000000000000000000000006044820152606401610962565b806117d181612f78565b9150506116a8565b5061ffff7f0000000000000000000000000000000000000000000000000000000000000000161561183e5780600b60148282829054906101000a900461ffff166118239190612e4d565b92506101000a81548161ffff021916908361ffff1602179055505b60005b8181101561187e5761186c3384838151811061185f5761185f612fe9565b6020026020010151612272565b8061187681612f78565b915050611841565b50506001600a5550565b6002600a5414156118db5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610962565b6002600a557f00000000000000000000000000000000000000000000000000000000000000001561194e5760405162461bcd60e51b815260206004820152601c60248201527f474d506173733a4f50454e5f4d494e54494e475f44495341424c4544000000006044820152606401610962565b60006119586112fe565b116119a55760405162461bcd60e51b815260206004820152601d60248201527f474d506173733a4d41585f414c4c4f434154494f4e5f524541434845440000006044820152606401610962565b61270f811180156119bd57506119b9611420565b8111155b80611a6857506040516331a9108f60e11b81526004810182905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e9060240160206040518083038186803b158015611a2557600080fd5b505afa158015611a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5d91906129ff565b6001600160a01b0316145b611ab45760405162461bcd60e51b815260206004820152601160248201527f474d506173733a494e56414c49445f49440000000000000000000000000000006044820152606401610962565b7f00000000000000000000000000000000000000000000000000000000000000003414610ed55760405162461bcd60e51b8152602060048201526014602482015273474d506173733a494e56414c49445f505249434560601b6044820152606401610962565b6001600160a01b038216331415611b735760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610962565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600061270f821115611c335760405162461bcd60e51b815260206004820152601360248201527f496e76616c6964206d61736b206e756d626572000000000000000000000000006044820152606401610962565b612710610ed7611c438285612e6a565b611c4d9190612ed8565b6108559190612f93565b611c613383611fbc565b611cd35760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610962565b611cdf848484846122e2565b50505050565b600b54600090611d2090600160a01b900461ffff167f0000000000000000000000000000000000000000000000000000000000000000612eb5565b61ffff16905090565b6000818152600260205260409020546060906001600160a01b0316611db65760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610962565b6000611dcd60408051602081019091526000815290565b90506000815111611ded5760405180602001604052806000815250611e18565b80611df784612360565b604051602001611e08929190612d5a565b6040516020818303038152906040525b9392505050565b600b546001600160a01b03163314611e795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610962565b6001600160a01b038116611ef55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610962565b61141d81612290565b60006001600160e01b031982166380ac58cd60e01b1480611f2f57506001600160e01b03198216635b5e139f60e01b145b8061085557506301ffc9a760e01b6001600160e01b0319831614610855565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611f8382611105565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166120355760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610962565b600061204083611105565b9050806001600160a01b0316846001600160a01b0316148061207b5750836001600160a01b0316612070846108ed565b6001600160a01b0316145b806120ab57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166120c682611105565b6001600160a01b0316146121425760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610962565b6001600160a01b0382166121a45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610962565b6121af838383612476565b6121ba600082611f4e565b6001600160a01b03831660009081526003602052604081208054600192906121e3908490612ed8565b90915550506001600160a01b0382166000908152600360205260408120805460019290612211908490612e6a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61228c82826040518060200160405280600081525061252e565b5050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6122ed8484846120b3565b6122f9848484846125ac565b611cdf5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610962565b6060816123845750506040805180820190915260018152600360fc1b602082015290565b8160005b81156123ae578061239881612f78565b91506123a79050600a83612e82565b9150612388565b60008167ffffffffffffffff8111156123c9576123c9612fff565b6040519080825280601f01601f1916602001820160405280156123f3576020820181803683370190505b5090505b84156120ab57612408600183612ed8565b9150612415600a86612f93565b612420906030612e6a565b60f81b81838151811061243557612435612fe9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061246f600a86612e82565b94506123f7565b6001600160a01b0383166124d1576124cc81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6124f4565b816001600160a01b0316836001600160a01b0316146124f4576124f48382612704565b6001600160a01b03821661250b57610a98816127a1565b826001600160a01b0316826001600160a01b031614610a9857610a988282612850565b6125388383612894565b61254560008484846125ac565b610a985760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610962565b60006001600160a01b0384163b156126f957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906125f0903390899088908890600401612d89565b602060405180830381600087803b15801561260a57600080fd5b505af192505050801561263a575060408051601f3d908101601f1916820190925261263791810190612cf8565b60015b6126df573d808015612668576040519150601f19603f3d011682016040523d82523d6000602084013e61266d565b606091505b5080516126d75760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610962565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506120ab565b506001949350505050565b6000600161271184611190565b61271b9190612ed8565b60008381526007602052604090205490915080821461276e576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906127b390600190612ed8565b600083815260096020526040812054600880549394509092849081106127db576127db612fe9565b9060005260206000200154905080600883815481106127fc576127fc612fe9565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061283457612834612fd3565b6001900381819060005260206000200160009055905550505050565b600061285b83611190565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166128ea5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610962565b6000818152600260205260409020546001600160a01b03161561294f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610962565b61295b60008383612476565b6001600160a01b0382166000908152600360205260408120805460019290612984908490612e6a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000602082840312156129f457600080fd5b8135611e1881613015565b600060208284031215612a1157600080fd5b8151611e1881613015565b60008060408385031215612a2f57600080fd5b8235612a3a81613015565b91506020830135612a4a81613015565b809150509250929050565b600080600060608486031215612a6a57600080fd5b8335612a7581613015565b92506020840135612a8581613015565b929592945050506040919091013590565b60008060008060808587031215612aac57600080fd5b8435612ab781613015565b9350602085810135612ac881613015565b935060408601359250606086013567ffffffffffffffff80821115612aec57600080fd5b818801915088601f830112612b0057600080fd5b813581811115612b1257612b12612fff565b612b24601f8201601f19168501612e1c565b91508082528984828501011115612b3a57600080fd5b808484018584013760008482840101525080935050505092959194509250565b60008060408385031215612b6d57600080fd5b8235612b7881613015565b915060208301358015158114612a4a57600080fd5b60008060408385031215612ba057600080fd5b8235612bab81613015565b946020939093013593505050565b60008060208385031215612bcc57600080fd5b823567ffffffffffffffff80821115612be457600080fd5b818501915085601f830112612bf857600080fd5b813581811115612c0757600080fd5b8660208260051b8501011115612c1c57600080fd5b60209290920196919550909350505050565b60006020808385031215612c4157600080fd5b823567ffffffffffffffff80821115612c5957600080fd5b818501915085601f830112612c6d57600080fd5b813581811115612c7f57612c7f612fff565b8060051b9150612c90848301612e1c565b8181528481019084860184860187018a1015612cab57600080fd5b600095505b83861015612cce578035835260019590950194918601918601612cb0565b5098975050505050505050565b600060208284031215612ced57600080fd5b8135611e188161302a565b600060208284031215612d0a57600080fd5b8151611e188161302a565b600060208284031215612d2757600080fd5b5035919050565b60008151808452612d46816020860160208601612eef565b601f01601f19169290920160200192915050565b60008351612d6c818460208801612eef565b835190830190612d80818360208801612eef565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612dbb6080830184612d2e565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612dfd57835183529284019291840191600101612de1565b50909695505050505050565b602081526000611e186020830184612d2e565b604051601f8201601f1916810167ffffffffffffffff81118282101715612e4557612e45612fff565b604052919050565b600061ffff808316818516808303821115612d8057612d80612fa7565b60008219821115612e7d57612e7d612fa7565b500190565b600082612e9157612e91612fbd565b500490565b6000816000190483118215151615612eb057612eb0612fa7565b500290565b600061ffff83811690831681811015612ed057612ed0612fa7565b039392505050565b600082821015612eea57612eea612fa7565b500390565b60005b83811015612f0a578181015183820152602001612ef2565b83811115611cdf5750506000910152565b600181811c90821680612f2f57607f821691505b60208210811415612f5057634e487b7160e01b600052602260045260246000fd5b50919050565b600061ffff80831681811415612f6e57612f6e612fa7565b6001019392505050565b6000600019821415612f8c57612f8c612fa7565b5060010190565b600082612fa257612fa2612fbd565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461141d57600080fd5b6001600160e01b03198116811461141d57600080fdfea164736f6c6343000806000a";

export class MockGMPass__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    gm: string,
    onlyNHolders: boolean,
    maxTotalSupply: BigNumberish,
    reservedAllowance: BigNumberish,
    priceForNHoldersInWei: BigNumberish,
    priceForOpenMintInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockGMPass> {
    return super.deploy(
      name,
      symbol,
      gm,
      onlyNHolders,
      maxTotalSupply,
      reservedAllowance,
      priceForNHoldersInWei,
      priceForOpenMintInWei,
      overrides || {}
    ) as Promise<MockGMPass>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    gm: string,
    onlyNHolders: boolean,
    maxTotalSupply: BigNumberish,
    reservedAllowance: BigNumberish,
    priceForNHoldersInWei: BigNumberish,
    priceForOpenMintInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      gm,
      onlyNHolders,
      maxTotalSupply,
      reservedAllowance,
      priceForNHoldersInWei,
      priceForOpenMintInWei,
      overrides || {}
    );
  }
  attach(address: string): MockGMPass {
    return super.attach(address) as MockGMPass;
  }
  connect(signer: Signer): MockGMPass__factory {
    return super.connect(signer) as MockGMPass__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGMPassInterface {
    return new utils.Interface(_abi) as MockGMPassInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockGMPass {
    return new Contract(address, _abi, signerOrProvider) as MockGMPass;
  }
}
